<html>

<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>PROTOCOLS</title>
    <link rel="stylesheet" href="https://synrc.space/synrc.css" />
</head>

<body>

<nav>
    <a href='https://o3.click'>O3</a>
    <a href='https://n2o.o3.click'>N2O</a>
</nav>

<header>
    <a href="../index.html"><img src="https://o3.click/o3.svg"></a>
    <h1>PROTOCOLS</h1>
</header>

<main>
    <section>

<h3>INTRO</h3>

<p>The top-level sum of all available protocols is called federation.
   Each protocol should define its data type and (optionally) the custom handler.</p>

<figure><figcaption>Listing 1. N2O Protocols</figcaption><code>
  data N2OProto a = N2ONitro   (Nitro a)
                  | N2OWorkflow (Flow a)
                  | N2OClient (Client a)
                  | N2OStore   (Store a)

</code></figure>

<p>Note that in Haskell version session INIT and PING heartbeat protocols
   are built into N2O tract, so you don't worry about.</p>

    </section>
    <section>

<h3>CLIENT</h3>

<p>Each protocol consists of sum of messages.
   The CLIENT protocol sum has two messages:
   client originated and server originated messages.</p>

<figure><figcaption>Listing 2. Client/Server Protocol</figcaption><code>
  data Client a = Cli a
                | Srv a deriving (Show)

</code></figure>

    </section>
    <section>

<h3>NITRO</h3>

<p>Nitro protocol defines JavaScript postback container that
   delivers the parameters of UI elements alogin its session start marker.</p>

<figure><figcaption>Listing 3. Nitro Protocol</figcaption><code>
  data Nitro a = Init L.ByteString
               | Pickle { pickleSource  :: L.ByteString
                        , picklePickled :: L.ByteString
                        , pickleLinked  :: (M.Map BS.ByteString L.ByteString)
                        } deriving (Show)

</code></figure>

<p>Nitro protocol also implements a custom protocol info function
   which render actions accumulated after calling of page handler.</p>

<figure><figcaption>Listing 4. Protocol API</figcaption><code>
  nitroProto :: (Show a) => Proto N2OProto a L.ByteString
  nitroInfo  :: (Show a) => N2OProto a -> N2O N2OProto a L.ByteString Return

</code></figure>

    </section>
    <section>

<p>This module may refer to:
<a href="types.htm">TYPES</a></b>,
<a href="core.htm">CORE</a></b>
</p>

    </section>
</main>

<footer>
    Made with <span class="heart">‚ù§</span> to Haskell and N2O
</footer>

</body>
</html>
